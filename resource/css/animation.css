@charset "utf-8";
/* CSS Document */
.header {
    display: table-cell;
    text-align: center;
    color: #FFFFFF;
    text-decoration: none;
    /*letter-spacing: 0.3vh;*/
    /*text-shadow: 0.2vh 0.2vh 0 #cac6c5, -1px -1px 0 #cac6c5, -1px -1px 0 #cac6c5, -1px 1px 0 #cac6c5, 1px -1px 0 #cac6c5;*/
    transition: text-shadow 400ms ease-in-out;
}
.link.header{
    font-size: 2.75vh;
}
.header--pushDown {
    text-shadow: 1.5px 1.5px 0 #333, 0px 1.5px 0 #333, -1.5px -1.5px 0 #333, -1.5px -1.5px 0 #333, -1.5px 1.5px 0 #333, 1.5px -1.5px 0 #333, 0.77782px 0.77782px 0 #aaaaaa, 1.55563px 1.55563px 0 #aaaaaa, 2.33345px 2.33345px 0 #aaaaaa, 3.11127px 3.11127px 0 #aaaaaa, 3.88909px 3.88909px 0 #aaaaaa, 4.6669px 4.6669px 0 #aaaaaa, 5.44472px 5.44472px 0 #aaaaaa, 6.22254px 6.22254px 0 #aaaaaa, 7.00036px 7.00036px 0 #aaaaaa, 7.77817px 7.77817px 0 #aaaaaa;
}
.header--pushDown:hover {
    transform: translate(9px, 9px);
    text-shadow: 1.5px 1.5px 0 #cac6c5, -1.5px -1.5px 0 #cac6c5, -1.5px -1.5px 0 #cac6c5, -1.5px 1.5px 0 #cac6c5, 1.5px -1.5px 0 #cac6c5;
}
.header--raiseUp:hover {
    text-shadow:0.1vh 0.1vh 0 #F28F05, 0vh 0.1vh 0 #F28F05, 0.1vh 0vh 0 #F28F05, -0.1vh -0.1vh 0 #F28F05, -0.1vh 0.1vh 0 #F28F05, 0.1vh -0.1vh 0 #F28F05, 0.2vh 0.2vh 0 #F28F05, 0px 0.2vh 0 #F28F05, 0.2vh 0vh 0 #F28F05, -0.2vh -0.2vh 0 #F28F05, -0.2vh 0.2vh 0 #F28F05, 0.2vh -0.2vh 0 #F28F05,/* <--font-border */ 0.1vh 0.1vh 0 #0597F2,0.2vh 0.2vh 0 #0597F2,0.3vh 0.3vh 0 #0597F2,0.4vh 0.4vh 0 #0597F2,0.5vh 0.5vh 0 #0597F2,0.6vh 0.6vh 0 #0597F2,0.7vh 0.7vh 0 #0597F2,0.8vh 0.8vh 0 #0597F2;
    /*text-shadow: 1.5px 1.5px 0 #333, 0px 1.5px 0 #333, -1.5px -1.5px 0 #333, -1.5px -1.5px 0 #333, -1.5px 1.5px 0 #333, 1.5px -1.5px 0 #333, 0.77782px 0.77782px 0 #aaaaaa, 1.55563px 1.55563px 0 #aaaaaa, 2.33345px 2.33345px 0 #aaaaaa, 3.11127px 3.11127px 0 #aaaaaa, 3.88909px 3.88909px 0 #aaaaaa, 4.6669px 4.6669px 0 #aaaaaa, 5.44472px 5.44472px 0 #aaaaaa, 6.22254px 6.22254px 0 #aaaaaa, 7.00036px 7.00036px 0 #aaaaaa, 7.77817px 7.77817px 0 #aaaaaa;*/
}
.header--shadow:hover {
    transform: translate(5px, 0);
}
.header--shadow.header--raiseUp:hover {
    transform: translate(-5px, 0);
}
.color-bright {
    background-color: #ebaca5;
}
.color-bright .header {
    color: #f89bb4;
    text-shadow: 1.5px 1.5px 0 #d38076, -1.5px -1.5px 0 #d38076, -1.5px -1.5px 0 #d38076, -1.5px 1.5px 0 #d38076, 1.5px -1.5px 0 #d38076;
}
.color-bright .header--pushDown {
    text-shadow: 1.5px 1.5px 0 #fff, 0px 1.5px 0 #fff, -1.5px -1.5px 0 #fff, -1.5px -1.5px 0 #fff, -1.5px 1.5px 0 #fff, 1.5px -1.5px 0 #fff, 0.77782px 0.77782px 0 #e62915, 1.55563px 1.55563px 0 #e62915, 2.33345px 2.33345px 0 #e62915, 3.11127px 3.11127px 0 #e62915, 3.88909px 3.88909px 0 #e62915, 4.6669px 4.6669px 0 #e62915, 5.44472px 5.44472px 0 #e62915, 6.22254px 6.22254px 0 #e62915, 7.00036px 7.00036px 0 #e62915, 7.77817px 7.77817px 0 #e62915;
}
.color-bright .header--pushDown:hover {
    text-shadow: 1.5px 1.5px 0 #d38076, -1.5px -1.5px 0 #d38076, -1.5px -1.5px 0 #d38076, -1.5px 1.5px 0 #d38076, 1.5px -1.5px 0 #d38076;
}
.color-bright .header--raiseUp:hover {
    text-shadow: 1.5px 1.5px 0 #fff, 0px 1.5px 0 #fff, -1.5px -1.5px 0 #fff, -1.5px -1.5px 0 #fff, -1.5px 1.5px 0 #fff, 1.5px -1.5px 0 #fff, 0.77782px 0.77782px 0 #e62915, 1.55563px 1.55563px 0 #e62915, 2.33345px 2.33345px 0 #e62915, 3.11127px 3.11127px 0 #e62915, 3.88909px 3.88909px 0 #e62915, 4.6669px 4.6669px 0 #e62915, 5.44472px 5.44472px 0 #e62915, 6.22254px 6.22254px 0 #e62915, 7.00036px 7.00036px 0 #e62915, 7.77817px 7.77817px 0 #e62915;
}
/*
  These mixins are included in Codepen (and Compass) by default, but if you wanted to use them in your own project, here they are:

@function pow($number, $exp) {
  $value: 1;
  @if $exp > 0 {
    @for $i from 1 through $exp {
      $value: $value * $number;
    }
  }
  @else if $exp < 0 {
    @for $i from 1 through -$exp {
      $value: $value / $number;
    }
  }
  @return $value;
}

@function fact($number) {
  $value: 1;
  @if $number > 0 {
    @for $i from 1 through $number {
      $value: $value * $i;
    }
  }
  @return $value;
}

@function pi() {
  @return 3.14159265359;
}

@function rad($angle) {
  $unit: unit($angle);
  $unitless: $angle / ($angle * 0 + 1);
  // If the angle has 'deg' as unit, convert to radians.
  @if $unit == deg {
    $unitless: $unitless / 180 * pi();
  }
  @return $unitless;
}

@function sin($angle) {
  $sin: 0;
  $angle: rad($angle);
  // Iterate a bunch of times.
  @for $i from 0 through 10 {
    $sin: $sin + pow(-1, $i) * pow($angle, (2 * $i + 1)) / fact(2 * $i + 1);
  }
  @return $sin;
}

@function cos($angle) {
  $cos: 0;
  $angle: rad($angle);
  // Iterate a bunch of times.
  @for $i from 0 through 10 {
    $cos: $cos + pow(-1, $i) * pow($angle, 2 * $i) / fact(2 * $i);
  }
  @return $cos;
}

*/
